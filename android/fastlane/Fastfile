# Fastfile for Android
default_platform(:android)

platform :android do
  desc "Build and deploy a new version to Google Play Internal Testing"
  lane :deploy_internal do
    # Increment version code
    increment_version_code(
      gradle_file_path: "app/build.gradle"
    )

    # Build the app bundle
    gradle(
      task: "bundle",
      build_type: "Release",
      flavor: "prod",
      properties: {
        "android.injected.signing.store.file" => "keystore.jks",
        "android.injected.signing.store.password" => ENV["ANDROID_KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"],
      }
    )

    # Upload to Google Play Internal Testing
    upload_to_play_store(
      track: "internal",
      aab: "app/build/outputs/bundle/prodRelease/app-prod-release.aab",
      skip_upload_screenshots: true,
      skip_upload_images: true,
      skip_upload_metadata: false
    )

    # Notify team
    slack(
      message: "New Android build deployed to Internal Testing!",
      success: true,
      slack_url: ENV["SLACK_WEBHOOK_URL"]
    )
  end

  desc "Promote Internal Testing to Beta"
  lane :promote_to_beta do
    upload_to_play_store(
      track: "internal",
      track_promote_to: "beta",
      skip_upload_aab: true,
      skip_upload_screenshots: true,
      skip_upload_images: true
    )

    slack(
      message: "Android build promoted to Beta!",
      success: true,
      slack_url: ENV["SLACK_WEBHOOK_URL"]
    )
  end

  desc "Promote Beta to Production"
  lane :promote_to_production do
    upload_to_play_store(
      track: "beta",
      track_promote_to: "production",
      skip_upload_aab: true,
      skip_upload_screenshots: true,
      skip_upload_images: true,
      rollout: "0.1" # Start with 10% rollout
    )

    slack(
      message: "Android build promoted to Production with 10% rollout!",
      success: true,
      slack_url: ENV["SLACK_WEBHOOK_URL"]
    )
  end

  desc "Build APK for development testing"
  lane :build_dev do
    gradle(
      task: "assemble",
      build_type: "Debug",
      flavor: "dev"
    )

    # Note: Firebase App Distribution removed as per requirements
    # Upload APK to alternative distribution service if needed
  end

  desc "Run all tests"
  lane :test do
    gradle(task: "test")
    gradle(task: "connectedAndroidTest")
  end

  desc "Screenshot generation"
  lane :screenshots do
    capture_android_screenshots
    frameit
  end
end
