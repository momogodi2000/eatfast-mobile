00:00 +0: loading E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart
00:00 +0: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should complete login flow successfully
00:06 +1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +2: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +3: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +5: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +6: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +9: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +10: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +11: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +12: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:12 +13: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:13 +14: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:14 +15: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:18 +16: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:18 +17: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:18 +18: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +19: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +20: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +21: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +22: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +23: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +23: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should complete registration flow
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
00:19 +24: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +24: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should complete registration flow
  Actual: _TextWidgetFinder:<Found 2 widgets with text "Create Account": [
            Text("Create Account", dependencies: [DefaultSelectionStyle, DefaultTextStyle,
MediaQuery]),
            Text("Create Account", dependencies: [DefaultSelectionStyle, DefaultTextStyle,
MediaQuery]),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart:142:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
00:19 +25: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +25: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should complete registration flow
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart line 142
The test description was:
  should complete registration flow
════════════════════════════════════════════════════════════════════════════════════════════════════
00:19 +25 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +25 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should complete registration flow [E]
  Test failed. See exception logs above.
  The test description was: should complete registration flow
  
00:19 +25 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
══╡ EXCEPTION CAUGHT BY SCHEDULER LIBRARY ╞═════════════════════════════════════════════════════════
00:19 +26 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +27 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +28 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +29 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +30 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +31 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +32 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
The following assertion was thrown during a scheduler callback:
00:19 +33 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +34 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:19 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
There are multiple heroes that share the same tag within a subtree.
Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), each Hero must
have a unique non-null tag.
In this case, multiple heroes had the following tag: <default FloatingActionButton tag>
├# Here is the subtree for one of the offending heroes: Hero

When the exception was thrown, this was the stack:
#0      Hero._allHeroesFor.inviteHero.<anonymous closure> (package:flutter/src/widgets/heroes.dart:277:11)
#1      Hero._allHeroesFor.inviteHero (package:flutter/src/widgets/heroes.dart:293:8)
00:20 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
00:20 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
#2      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:311:11)
00:20 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation
The following TestFailure was thrown running a test:
00:20 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
#3      SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#4      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
00:20 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 0 widgets with text "Last name is required": []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
00:21 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
#5      ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#6      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#7      MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:7118:16)
#8      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#9      ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#10     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#11     MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:7118:16)
#12     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
00:21 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation
#4      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart:194:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart line 194
The test description was:
00:21 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
#13     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
00:21 +35 -1: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation
  should handle registration validation
════════════════════════════════════════════════════════════════════════════════════════════════════
00:21 +35 -2: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
00:21 +35 -2: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle registration validation [E]
  Test failed. See exception logs above.
  The test description was: should handle registration validation
  
00:21 +35 -2: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking
#14     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#15     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#16     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#17     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#18     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#19     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#20     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#21     MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:7118:16)
#22     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#23     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#24     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#25     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#26     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#27     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#28     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#29     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#30     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#31     MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:7118:16)
#32     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#33     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#34     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#35     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#36     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#37     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#38     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#39     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#40     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#41     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#42     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#43     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#44     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#45     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#46     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#47     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#48     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#49     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#50     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#51     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#52     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#53     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#54     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#55     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#56     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#57     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#58     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#59     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#60     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#61     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#62     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#63     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#64     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#65     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#66     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#67     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#68     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#69     ComponentElement.visitChildren (package:flutter/src/widgets/framework.dart:5763:14)
#70     Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:326:15)
#71     SingleChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:6994:14)
#72     Element.visitChildElements (package:flutter/src/widgets/framework.dart:3879:5)
#73     Hero._allHeroesFor (package:flutter/src/widgets/heroes.dart:329:13)
#74     HeroController._startHeroTransition (package:flutter/src/widgets/heroes.dart:990:20)
#75     HeroController._maybeStartHeroTransition.<anonymous closure> (package:flutter/src/widgets/heroes.dart:940:9)
#76     SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1438:15)
#77     SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1365:11)
#78     LiveTestWidgetsFlutterBinding.handleDrawFrame (package:flutter_test/src/binding.dart:1895:13)
#79     SchedulerBinding._handleDrawFrame (package:flutter/src/scheduler/binding.dart:1204:5)
#83     _invoke (dart:ui/hooks.dart:333:10)
#84     PlatformDispatcher._drawFrame (dart:ui/platform_dispatcher.dart:444:5)
#85     _drawFrame (dart:ui/hooks.dart:303:31)
(elided 3 frames from dart:async)
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 168 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart:602:13

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#be2a3 relayoutBoundary=up1 OVERFLOWING:
  creator: Column ← KeyedSubtree-[GlobalKey#a70c1] ← _BodyBuilder ← MediaQuery ←
    LayoutId-[<_ScaffoldSlot.body>] ← CustomMultiChildLayout ← _ActionsScope ← Actions ←
    AnimatedBuilder ← DefaultTextStyle ← AnimatedDefaultTextStyle ← _InkFeatures-[GlobalKey#31bc8 ink
    renderer] ← ⋯
  parentData: offset=Offset(0.0, 56.0); id=_ScaffoldSlot.body (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=544.0)
  size: Size(800.0, 544.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:23 +35 -3: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle email verification flow
00:23 +35 -3: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should complete full order flow from home to tracking [E]
  Test failed. See exception logs above.
  The test description was: should complete full order flow from home to tracking
  
00:26 +35 -3: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle email verification flow
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following assertion was thrown running a test:
The finder "Found 0 widgets with key [<'resend_code_button'>]: []" (used in a call to "tap()") could
not find any matching widgets.

When the exception was thrown, this was the stack:
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2009:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart:260:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

The test description was:
  should handle email verification flow
════════════════════════════════════════════════════════════════════════════════════════════════════
00:26 +35 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:26 +35 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle email verification flow [E]
  Test failed. See exception logs above.
  The test description was: should handle email verification flow
  
00:26 +36 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:26 +37 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:26 +38 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:26 +39 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:27 +40 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:27 +41 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:27 +42 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:28 +43 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:28 +44 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:28 +45 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
00:29 +45 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle OAuth login flows
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
00:29 +45 -4: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 0 widgets with text "1": []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart:122:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart line 122
The test description was:
  should handle add to cart and quantity updates
════════════════════════════════════════════════════════════════════════════════════════════════════
00:29 +45 -5: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle OAuth login flows
00:29 +45 -5: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle add to cart and quantity updates [E]
  Test failed. See exception logs above.
  The test description was: should handle add to cart and quantity updates
  
00:30 +45 -5: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle OAuth login flows
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 0 widgets with text "Signing in with Apple...": []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart:293:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
00:30 +46 -5: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle OAuth login flows
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart line 293
The test description was:
  should handle OAuth login flows
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +46 -6: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle OAuth login flows [E]
  Test failed. See exception logs above.
  The test description was: should handle OAuth login flows
  
00:30 +46 -6: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order tracking and status updates

Warning: A call to tap() with finder "Found 1 widget with key [<'simulate_update_button'>]: [
  ElevatedButton-[<'simulate_update_button'>](dependencies: [InheritedCupertinoTheme, MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#eab32]], state: _ButtonStyleState#b7213),
]" derived an Offset (Offset(400.0, 744.0)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
Indeed, Offset(400.0, 744.0) is outside the bounds of the root of the render tree, Size(800.0, 600.0).
The finder corresponds to this RenderBox: RenderSemanticsAnnotations#e0f82 relayoutBoundary=up2
The hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#5cad9(_ReusableRenderView#1cf89 NEEDS-PAINT), HitTestEntry<HitTestTarget>#0fa8d(<IntegrationTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart:211:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 168 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart:602:13

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#cde82 relayoutBoundary=up1 OVERFLOWING:
  creator: Column ← KeyedSubtree-[GlobalKey#df0ff] ← _BodyBuilder ← MediaQuery ←
    LayoutId-[<_ScaffoldSlot.body>] ← CustomMultiChildLayout ← _ActionsScope ← Actions ←
    AnimatedBuilder ← DefaultTextStyle ← AnimatedDefaultTextStyle ← _InkFeatures-[GlobalKey#96231 ink
    renderer] ← ⋯
  parentData: offset=Offset(0.0, 56.0); id=_ScaffoldSlot.body (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=544.0)
  size: Size(800.0, 544.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:31 +46 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: Authentication Flow Integration Tests should handle guest login flow
00:31 +46 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order tracking and status updates [E]
  Test failed. See exception logs above.
  The test description was: should handle order tracking and status updates
  
00:32 +47 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:32 +48 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:32 +48 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/authentication_flow_test.dart: (tearDownAll)
Warning: integration_test plugin was not detected.

If you're running the tests with `flutter drive`, please make sure your tests
are in the `integration_test/` directory of your package and use
`flutter test $path_to_test` to run it instead.

If you're running the tests with Android instrumentation or XCTest, this means
that you are not capturing test results properly! See the following link for
how to set up the integration_test plugin:

https://docs.flutter.dev/testing/integration-tests

00:32 +48 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:32 +48 -7: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle checkout with different payment methods
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following _TypeError was thrown running a test (but after the test had completed):
Null check operator used on a null value

When the exception was thrown, this was the stack:
#0      StatefulElement.state (package:flutter/src/widgets/framework.dart:5830:44)
#1      Navigator.of (package:flutter/src/widgets/navigator.dart:2900:38)
#2      Navigator.pushNamed (package:flutter/src/widgets/navigator.dart:1905:22)
#3      _MockCheckoutScreenState.build.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart:574:35)
#19     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
(elided 15 frames from class _Timer, dart:async, dart:async-patch, and package:stack_trace)
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +47 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:32 +47 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle checkout with different payment methods [E]
  Test failed. See exception logs above.
  The test description was: should handle checkout with different payment methods
  
  This test failed after it had already completed.
  Make sure to use a matching library which informs the test runner
  of pending async work.
  
00:34 +48 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +49 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +50 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +51 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +52 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +53 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +54 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +55 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +56 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:34 +57 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: Complete Order Flow Integration Tests should handle order completion and rating
00:35 +58 -8: E:/project/Eat Fast App/eatfatsApp/test/integration/user_flows/complete_order_flow_test.dart: (tearDownAll)
Warning: integration_test plugin was not detected.

If you're running the tests with `flutter drive`, please make sure your tests
are in the `integration_test/` directory of your package and use
`flutter test $path_to_test` to run it instead.

If you're running the tests with Android instrumentation or XCTest, this means
that you are not capturing test results properly! See the following link for
how to set up the integration_test plugin:

https://docs.flutter.dev/testing/integration-tests

00:38 +58 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Connection Management should initialize WebSocket connection
00:38 +59 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Connection Management should handle connection success
00:38 +60 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Connection Management should handle connection failure
00:38 +61 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Connection Management should attempt reconnection on disconnect
00:38 +62 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Real-time Events should handle order status updates
00:38 +63 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Real-time Events should handle driver location updates
00:38 +64 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Real-time Events should handle real-time notifications
00:38 +65 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Event Subscriptions should subscribe to order updates
00:38 +66 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Event Subscriptions should subscribe to driver location
00:38 +67 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Event Subscriptions should unsubscribe from events
00:38 +68 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Message Sending should send driver location updates
00:38 +69 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Message Sending should send order status updates
00:38 +70 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Message Sending should send custom messages
00:38 +71 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Heartbeat and Keep-Alive should send periodic heartbeat
00:38 +72 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Heartbeat and Keep-Alive should handle pong response
00:38 +73 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Error Handling should handle connection timeout
00:38 +74 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Error Handling should handle invalid message format
00:38 +75 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Error Handling should handle server errors
00:38 +76 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Stream Management should provide order updates stream
00:38 +77 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Stream Management should provide driver location stream
00:38 +78 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Stream Management should provide notifications stream
00:38 +79 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Stream Management should provide connection status stream
00:38 +80 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Cleanup and Disposal should disconnect properly
WebSocket disconnected manually
00:38 +81 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/core/services/websocket_service_test.dart: WebSocketService Tests Cleanup and Disposal should dispose all resources
WebSocket disconnected manually
00:42 +82 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should create AppUser with valid data
00:42 +83 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should serialize to JSON correctly
00:43 +84 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should deserialize from JSON correctly
00:43 +85 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should handle role permissions correctly
00:43 +86 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should create user with default values
00:43 +87 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should handle user verification status
00:43 +88 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should copy user with new values
00:43 +89 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests AppUser should generate display names correctly
00:43 +90 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests UserRole should convert from string correctly
00:43 +91 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests UserRole should have correct string values
00:43 +92 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests UserStatus should convert from string correctly
00:43 +93 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/models/user_model_test.dart: User Model Tests UserStatus should have correct string values
00:46 +94 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Login should login with valid credentials
00:47 +95 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Login should throw exception for invalid credentials
00:47 +96 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Registration should register new user successfully
00:47 +97 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Registration should handle registration failure
00:47 +98 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Logout should logout successfully
00:47 +99 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Logout should logout even if api call fails
00:47 +100 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Current User should get current user when token exists
00:47 +101 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Current User should return null when no token exists
00:47 +102 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Token Refresh should refresh token successfully
00:47 +103 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Token Refresh should handle refresh failure
00:47 +104 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Error Handling should handle storage errors gracefully
00:47 +105 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/data/repositories/auth_repository_test.dart: AuthRepository Tests Error Handling should handle network errors gracefully
00:50 +106 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Login should login with valid credentials
00:50 +107 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Login should reject invalid credentials
00:50 +108 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Login should handle network errors during login
00:50 +109 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Registration should register new user successfully
00:50 +110 -8: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Registration should validate email format
00:50 +110 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Registration should validate email format [E]
  Expected: false
    Actual: <true>
  
  package:matcher                                       expect
  package:flutter_test/src/widget_tester.dart 474:18    expect
  test\unit\features\auth\auth_service_test.dart 86:11  main.<fn>.<fn>.<fn>
  
00:51 +110 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Registration should validate password strength
00:51 +111 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Token Management should store JWT token securely
00:51 +112 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Token Management should refresh expired tokens
00:51 +113 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Token Management should handle token refresh failure
00:51 +114 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Session Management should maintain user session
00:51 +115 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Session Management should logout user properly
00:51 +116 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Session Management should handle session expiry
00:51 +117 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Roles and Permissions should handle customer role
00:51 +118 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Roles and Permissions should handle restaurant owner role
00:51 +119 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Roles and Permissions should handle admin role
00:51 +120 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Roles and Permissions should handle delivery agent role
00:51 +121 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests User Roles and Permissions should handle guest role
00:51 +122 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Password Reset should send password reset email
00:51 +123 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Password Reset should verify reset code
00:51 +124 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Password Reset should reset password with valid code
00:51 +125 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Two-Factor Authentication should send OTP for 2FA
00:51 +126 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Two-Factor Authentication should verify OTP
00:51 +127 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests Two-Factor Authentication should handle OTP expiry
00:51 +128 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests OAuth Integration should handle Google OAuth
00:51 +129 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/auth/auth_service_test.dart: Authentication Service Tests OAuth Integration should handle Apple OAuth
00:55 +130 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Points Management should earn points for order completion
00:55 +131 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Points Management should calculate points for different activities
00:55 +132 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Points Management should track points balance correctly
00:55 +133 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Tier System should determine user tier based on points
00:55 +134 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Tier System should calculate points needed for next tier
00:55 +135 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Tier System should provide tier benefits
00:55 +136 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Rewards Redemption should redeem points for rewards
00:55 +137 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Rewards Redemption should validate redemption eligibility
00:55 +138 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Rewards Redemption should track redemption history
00:55 +139 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Referral System should generate unique referral code
00:55 +140 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Referral System should track referral success
00:55 +141 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Referral System should validate referral code usage
00:55 +142 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Special Events and Bonuses should handle birthday bonus
00:55 +143 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Special Events and Bonuses should handle special event multipliers
00:55 +144 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Special Events and Bonuses should track seasonal promotions
00:55 +145 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Loyalty Analytics should track user engagement metrics
00:55 +146 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Loyalty Analytics should calculate redemption rate
00:55 +147 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Loyalty Analytics should track popular rewards
00:55 +148 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Gamification Features should handle achievement badges
00:56 +149 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Gamification Features should track progress towards achievements
00:56 +150 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/loyalty/loyalty_service_test.dart: Loyalty Service Tests Gamification Features should handle streak bonuses
01:00 +151 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should create order with valid cart data
01:01 +152 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should calculate order totals correctly
01:01 +153 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should handle different payment methods
01:01 +154 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should validate address information correctly
01:01 +155 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should handle payment status transitions
01:01 +156 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should serialize payment to JSON correctly
01:01 +157 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should deserialize payment from JSON correctly
01:01 +158 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/features/orders/order_service_test.dart: Order Service Tests Order Creation should handle mobile money providers correctly
01:04 +159 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should create initial state correctly
01:04 +160 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should create loading state correctly
01:04 +161 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should create authenticated state correctly
01:04 +162 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should create error state correctly
01:04 +163 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should copy state with new values
01:04 +164 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthState should compare states correctly
01:04 +165 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should have initial state
01:04 +166 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should login successfully
01:04 +167 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should handle login failure
01:04 +168 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should set loading state during login
01:04 +169 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should register successfully
01:04 +170 -9: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should handle registration failure
01:05 +170 -10: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should handle registration failure [E]
  Expected: contains 'Email already exists'
    Actual: 'type \'Null\' is not a subtype of type \'FutureOr<AppUser>\''
     Which: does not contain 'Email already exists'
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 474:18  expect
  test\unit\providers\auth_provider_test.dart 481:9   main.<fn>.<fn>.<fn>
  
01:05 +170 -10: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should logout successfully
01:05 +170 -11: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should logout successfully [E]
  Expected: null
    Actual: <Instance of 'AppUser'>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 474:18  expect
  test\unit\providers\auth_provider_test.dart 509:9   main.<fn>.<fn>.<fn>
  
01:05 +170 -11: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should logout even if repository logout fails
01:05 +170 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should logout even if repository logout fails [E]
  Expected: null
    Actual: <Instance of 'AppUser'>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 474:18  expect
  test\unit\providers\auth_provider_test.dart 537:9   main.<fn>.<fn>.<fn>
  
01:05 +170 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should check auth status for logged in user
01:05 +171 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should check auth status for not logged in user
01:05 +172 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should handle auth status check failure
01:05 +173 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests AuthNotifier should clear error
01:05 +174 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests Provider Integration should work with Riverpod provider
01:05 +175 -12: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests Provider Integration should notify listeners on state changes
01:05 +175 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/auth_provider_test.dart: AuthProvider Tests Provider Integration should notify listeners on state changes [E]
  Bad state: Tried to use AuthNotifier after `dispose` was called.
  
  Consider checking `mounted`.
  
  package:state_notifier/state_notifier.dart 175:9    StateNotifier._debugIsMounted.<fn>
  package:state_notifier/state_notifier.dart 182:6    StateNotifier._debugIsMounted
  package:state_notifier/state_notifier.dart 197:12   StateNotifier.state
  test\unit\providers\auth_provider_test.dart 135:15  AuthNotifier.login
  ===== asynchronous gap ===========================
  dart:async                                          _CustomZone.registerUnaryCallback
  test\unit\providers\auth_provider_test.dart 129:20  AuthNotifier.login
  test\unit\providers\auth_provider_test.dart 662:55  main.<fn>.<fn>.<fn>
  
01:08 +175 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartState should create initial state correctly
01:08 +176 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartState should calculate subtotal correctly
01:08 +177 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartState should calculate total with fees and discounts
01:08 +178 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartState should check restaurant compatibility
01:08 +179 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartState should copy state with new values
01:08 +180 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartItem should create cart item correctly
01:08 +181 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartItem should copy item with new values
01:08 +182 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartItem should compare items correctly
01:08 +183 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should have initial empty state
01:08 +184 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should add item to empty cart
01:08 +185 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should increase quantity when adding same item
01:08 +186 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should add different items as separate entries
01:08 +187 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should treat items with different special instructions as separate
01:08 +188 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should throw exception when adding items from different restaurant
01:08 +189 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should remove item correctly
01:08 +190 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should clear restaurant info when removing all items
01:08 +191 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should update item quantity correctly
01:08 +192 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should remove item when quantity is set to zero
01:08 +193 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should update item special instructions
01:08 +194 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should clear cart completely
01:08 +195 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should update fees and discounts
01:08 +196 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should get item by id
01:08 +197 -13: E:/project/Eat Fast App/eatfatsApp/test/unit/providers/cart_provider_test.dart: CartProvider Tests CartNotifier should check item existence and get quantity
01:13 +198 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/cart_screen_test.dart: Cart Screen Widget Tests should display empty cart message
01:15 +199 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/cart_screen_test.dart: Cart Screen Widget Tests should display cart items list
01:16 +200 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/cart_screen_test.dart: Cart Screen Widget Tests should display order summary
01:16 +201 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/cart_screen_test.dart: Cart Screen Widget Tests should handle quantity updates
01:16 +202 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/cart_screen_test.dart: Cart Screen Widget Tests should display promo code section
01:17 +203 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display checkout header
01:17 +204 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display checkout header
01:18 +205 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display checkout header
01:18 +206 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display checkout header
01:18 +207 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display checkout header
01:19 +208 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display delivery address selection
01:20 +209 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display delivery time options
01:20 +210 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display payment methods
01:20 +211 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display order summary
01:20 +212 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display special instructions section
01:21 +213 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display tip selection
01:21 +214 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display place order button
01:21 +215 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should handle loading state during order placement
01:22 +216 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display error message on order failure
01:22 +217 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/checkout_screen_test.dart: Checkout Screen Widget Tests should display order confirmation dialog
01:22 +218 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display app bar with title and actions
01:24 +219 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display delivery address selector
01:25 +220 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display search bar
01:26 +221 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display banner carousel
01:26 +222 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display category filters
01:26 +223 -13: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display featured restaurants section
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 44 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/home_screen_test.dart:269:36

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e7a64 OVERFLOWING:
  creator: Column ← Semantics ← DefaultTextStyle ← AnimatedDefaultTextStyle ←
    _InkFeatures-[GlobalKey#82a09 ink renderer] ← NotificationListener<LayoutChangedNotification> ←
    CustomPaint ← _ShapeBorderPaint ← PhysicalShape ← _MaterialInterior ← Material ← Padding ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=152.0, h=192.0)
  size: Size(152.0, 192.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 44 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/home_screen_test.dart:269:36

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#51cca OVERFLOWING:
  creator: Column ← Semantics ← DefaultTextStyle ← AnimatedDefaultTextStyle ←
    _InkFeatures-[GlobalKey#4bec6 ink renderer] ← NotificationListener<LayoutChangedNotification> ←
    CustomPaint ← _ShapeBorderPaint ← PhysicalShape ← _MaterialInterior ← Material ← Padding ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=152.0, h=192.0)
  size: Size(152.0, 192.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 44 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/home_screen_test.dart:269:36

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#85afe OVERFLOWING:
  creator: Column ← Semantics ← DefaultTextStyle ← AnimatedDefaultTextStyle ←
    _InkFeatures-[GlobalKey#9a875 ink renderer] ← NotificationListener<LayoutChangedNotification> ←
    CustomPaint ← _ShapeBorderPaint ← PhysicalShape ← _MaterialInterior ← Material ← Padding ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=152.0, h=192.0)
  size: Size(152.0, 192.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
01:27 +223 -14: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display featured restaurants section [E]
  Test failed. See exception logs above.
  The test description was: should display featured restaurants section
  
01:27 +223 -14: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display quick actions section
01:27 +224 -14: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display recent orders section
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 2 widgets with text "Delivered • $25.99": [
            Text("Delivered • $25.99", dependencies: [DefaultSelectionStyle, DefaultTextStyle,
MediaQuery]),
            Text("Delivered • $25.99", dependencies: [DefaultSelectionStyle, DefaultTextStyle,
MediaQuery]),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/home_screen_test.dart:418:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/home_screen_test.dart line 418
The test description was:
  should display recent orders section
════════════════════════════════════════════════════════════════════════════════════════════════════
01:28 +224 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should display recent orders section [E]
  Test failed. See exception logs above.
  The test description was: should display recent orders section
  
01:28 +224 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/home_screen_test.dart: Home Screen Widget Tests should handle pull to refresh
01:29 +225 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should display login form correctly
01:29 +226 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should display login form correctly
01:31 +227 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should validate email input
01:32 +228 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should validate password input
01:32 +229 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should show loading indicator during login
01:32 +230 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should display error message on login failure
01:32 +231 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should navigate to forgot password screen
01:33 +232 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should navigate to register screen
01:33 +233 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display order status header
01:35 +234 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display order status header
01:35 +235 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should display OAuth login options
01:36 +236 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should display OAuth login options
01:36 +237 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display delivery driver information
01:36 +238 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/login_screen_test.dart: Login Screen Widget Tests should handle guest login option
01:36 +239 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display live tracking map
01:37 +240 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display order items summary
01:37 +241 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display delivery address
01:37 +242 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display action buttons
01:37 +243 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should display order completion state
01:37 +244 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/order_tracking_screen_test.dart: Order Tracking Screen Widget Tests should handle real-time status updates
01:39 +245 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display user profile header
01:42 +246 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display loyalty stats
01:42 +247 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display profile menu items
01:43 +248 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display settings section
01:43 +249 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant header information
01:43 +250 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant header information
01:44 +251 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant header information
01:45 +252 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant header information
01:45 +252 -15: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display order history section
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 7.0 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/profile_screen_test.dart:569:32

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#d9b38 relayoutBoundary=up20 OVERFLOWING:
  creator: Column ← SizedBox ← DefaultTextStyle ← AnimatedDefaultTextStyle ← _ListTile ←
    IconButtonTheme ← IconTheme ← Builder ← MediaQuery ← Padding ← SafeArea ← Builder ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=80.0, 0.0<=h<=56.0)
  size: Size(80.0, 56.0)
  direction: vertical
  mainAxisAlignment: center
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 7.0 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/profile_screen_test.dart:569:32

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#8a705 relayoutBoundary=up20 OVERFLOWING:
  creator: Column ← SizedBox ← DefaultTextStyle ← AnimatedDefaultTextStyle ← _ListTile ←
    IconButtonTheme ← IconTheme ← Builder ← MediaQuery ← Padding ← SafeArea ← Builder ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=80.0, 0.0<=h<=56.0)
  size: Size(80.0, 56.0)
  direction: vertical
  mainAxisAlignment: center
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 7.0 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///E:/project/Eat%20Fast%20App/eatfatsApp/test/widget/screens/profile_screen_test.dart:569:32

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a1b89 relayoutBoundary=up20 OVERFLOWING:
  creator: Column ← SizedBox ← DefaultTextStyle ← AnimatedDefaultTextStyle ← _ListTile ←
    IconButtonTheme ← IconTheme ← Builder ← MediaQuery ← Padding ← SafeArea ← Builder ← ⋯
  parentData: <none> (can use size)
  constraints: BoxConstraints(w=80.0, 0.0<=h<=56.0)
  size: Size(80.0, 56.0)
  direction: vertical
  mainAxisAlignment: center
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
01:45 +252 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant header information
01:45 +252 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display order history section [E]
  Test failed. See exception logs above.
  The test description was: should display order history section
  
01:46 +253 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/profile_screen_test.dart: Profile Screen Widget Tests should display favorite restaurants
01:46 +254 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant info tabs
01:46 +255 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display menu categories
01:47 +256 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display menu items list
01:47 +257 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant reviews
01:47 +258 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display restaurant information
01:48 +259 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should handle add to cart action
01:48 +260 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should display floating cart button when items added
01:48 +261 -16: E:/project/Eat Fast App/eatfatsApp/test/widget/screens/restaurant_detail_screen_test.dart: Restaurant Detail Screen Widget Tests should handle menu item customization
01:49 +262 -16: Some tests failed.
